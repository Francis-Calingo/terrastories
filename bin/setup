#!/bin/bash
set -eu

abort() {
  printf "%s\n" "$@" >&2
  exit 1
}

# Fail fast if not on Linux or Mac
OS="$(uname)"
if [[ "${OS}" == "Linux" ]]
then
  LINUX=1
elif [[ "${OS}" == "Darwin" ]]
then
  MACOS=1
else
  abort "Terrastories is only supported on macOS and Linux."
fi

# Fail fast if no internet cnonection is detected
ping -q -c1 google.com &>/dev/null && true || abort "Internet connection is required to complete setup."

## Fail Fast if previous setup is detected
shouldRun=false

if [ ! -f .env ]; then
  shouldRun=true
else
  echo "Oops. It looks like you've already setup Terrastories."
  echo "You can re-run setup, or run bin/update to update your instance."
  echo
  read -p "Are you sure you want to re-run setup? (y/n) " rerun

  if [ "$rerun" = "Y" ] || [ "$rerun" = "y" ]; then
    shouldRun=true
  fi
fi

if ! $shouldRun; then
  exit 0
fi

# Set Colors & Bold
Blue='\033[0;36m'
Green='\033[0;32m'
Purple='\033[0;35m'
Off='\033[00m'
Bold='\033[1m'

## Start Helpers
shell_join() {
  local arg
  printf "%s" "$1"
  shift
  for arg in "$@"
  do
    printf " "
    printf "%s" "${arg// /\ }"
  done
}

ohai() {
  printf "${Purple}==>${Bold} %s${Off}\n" "$(shell_join "$@")"
}

execute() {
  if ! "$@"
  then
    abort "$(printf "Failed during: %s" "$(shell_join "$@")")"
  fi
}
## End Helpers

# Set Up Start
ohai "Configure Network Access"
read -p "$(
  cat <<NETWORK

Would you like to enable network access?

    (1) Yes, I would like to enable network access
    (2) No, I only plan on using my machine [default]

Your choice: 
NETWORK
  )" addhosts

hostname=$(hostname)
if [ -z "$addhosts" ] || [ $addhosts -eq 2 ]; then
  unset hostname
else
  echo
  read -p "Specify hostname: [$hostname] " hosts
  hostname=${hosts:-$hostname}

  if [ "$hostname" == "$(hostname)" ]; then
    echo "You have specified your own hostname, no further configuration needed."
  elif ! grep -q "$hostname" /etc/hosts; then
    ohai Configure Host Domain
    read -p "$(
      cat <<MODHOSTS

In order to utilize $hostname, you must add it to your /etc/hosts file.
This can be done manually by editing your /etc/hosts file, or you can provide your
password when prompted to allow us to automatically configure them.

  Choose one:
    (1) Manual
    (2) Automatic

Your choice: 
MODHOSTS
    )" modHosts

    if [ $modHosts -eq 1 ]; then
      read -p "$(
cat <<HOSTS

In a new terminal window, open /etc/hosts with appropriate write permissions
and add the following line:

  127.0.0.1 $hostname

Press any key to continue or q to quit. 
HOSTS
      )" -n 1 k
      if [[ "$k" = "q" ]]; then
        exit
      fi
    else
      echo "Automatically configuring terrastories.local. You may prompted for your password."
      sudo -- sh -c "echo '# Added by Terrastories\n127.0.0.1 $hostname\n127.0.0.1 terrastories.local\n# End of section' >> /etc/hosts"
      echo -e "...${Green}done!${Off}"
    fi
  fi
fi

# Copy .env.sample if .env does not exist
if [ ! -f .env ]; then
  cp .env.example .env
fi
if [ ! -f .env.api ]; then
  cp .env.api.example .env.api
fi

# Enable HOST_HOSTNAME
if [ ! -z ${hostname-} ]; then
  grep -v "HOST_HOSTNAME" .env > .envnew; mv .envnew .env
  echo "HOST_HOSTNAME=$hostname" >> .env
fi

# Download default .pmtiles
if [ ! -f map/terrastories-map/tiles.pmtiles ]; then
  ohai Downloading default self-hosted map assets…
  git clone --quiet "https://github.com/Terrastories/default-offline-map/" map/terrastories-map
  curl -fsSL "https://t.ly/OTZpR" -o "map/terrastories-map/planet.pmtiles" --create-dirs
fi

# Run Setup
ohai Getting the latest Terrastories image…
docker compose up -d

ohai Installing Dependencies…
docker compose run --rm web bundle install
docker compose run --rm web yarn

ohai Setting up your database
docker compose run --rm web bin/rails db:prepare
docker compose run --rm web bin/rails db:seed

ohai Finishing up…
docker compose stop

echo -e "${Blue}$(
  cat <<TERRASTORIES_ASCII
_ _ _ ____ _    ____ ____ _  _ ____    ___ ____
| | | |___ |    |    |  | |\/| |___     |  |  |
|_|_| |___ |___ |___ |__| |  | |___     |  |__|
 _______ _______ ______   ______   _______ _______ _______ _______ ______   ___ _______ _______
|       |       |    _ | |    _ | |   _   |       |       |       |    _ | |   |       |       |
|_     _|    ___|   | || |   | || |  |_|  |  _____|_     _|   _   |   | || |   |    ___|  _____|
  |   | |   |___|   |_||_|   |_||_|       | |_____  |   | |  | |  |   |_||_|   |   |___| |_____
  |   | |    ___|    __  |    __  |       |_____  | |   | |  |_|  |    __  |   |    ___|_____  |
  |   | |   |___|   |  | |   |  | |   _   |_____| | |   | |       |   |  | |   |   |___ _____| |
  |___| |_______|___|  |_|___|  |_|__| |__|_______| |___| |_______|___|  |_|___|_______|_______|
TERRASTORIES_ASCII
  )${Off}"

ohai "Boot up your Terrastories instance with the following command:"
echo "  docker compose up"
