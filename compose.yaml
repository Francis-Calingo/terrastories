services:
  db:
    image: postgres:11
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USERNAME-postgres}
      - POSTGRES_PASSWORD=${DB_USER_PASSWORD-postgres}
    volumes:
      - ./postgresql/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data

  web:
    image: terrastories/devcore:latest
    env_file:
      - .env
    command: scripts/server
    restart: unless-stopped
    stdin_open: true
    tty: true
    depends_on:
      - db
    ports:
      - 80:3000   # Intended for use with HOST_HOSTNAME set
      - 3000:3000 # Standard Rails development
      - 3035:3035 # For Shakapacker/Webpack development server
    expose:
      - "80"
      - "3000"
      - "3035"
    environment:
      - CHECK_BUNDLER=yes
      - RAILS_ENV=${RAILS_ENV-development}
    volumes:
      - bundler:/usr/local/bundle
      - ./rails:/api
      - ./data/media:/media
      - ./data/import/media:/api/import/media
      - ./map:/api/public/map:ro

  test:
    profiles: [test]
    image: terrastories/devcore:latest
    entrypoint: ["bundle", "exec", "rspec"]
    restart: no
    stdin_open: true
    tty: true
    depends_on:
      - db
    environment:
      - RAILS_ENV=test
    volumes:
      - bundler:/usr/local/bundle
      - ./rails:/api
      - ./data/media:/media
      - ./data/import/media:/api/import/media
      - ./map:/api/public/map:ro

  offline:
    profiles:
      - offline
    image: nginxproxy/nginx-proxy:latest
    restart: unless-stopped
    env_file:
      - .env.offline
    ports:
      - 80:80
    depends_on:
      - localweb
      - tileserver
      - db
    environment:
      - DEFAULT_HOST=terrastories.local
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/error_pages:/usr/share/nginx/html:ro
      - ./nginx/vhost.d:/etc/nginx/vhost.d:ro
      - ./nginx/unrestricted_file_size.conf:/etc/nginx/conf.d/unrestricted_file_size.conf:ro

  localweb:
    profiles:
      - offline
    image: terrastories-offline-test
    env_file:
      - .env.offline
    depends_on:
      - db
    volumes:
      - ./data/media:/media
      - ./data/import/media:/api/import/media
      - ./map:/api/public/map:ro
    environment:
      - RAILS_ENV=offline
      - PORT=3030
      - VIRTUAL_PORT=3030
      - VIRTUAL_HOST=terrastories.local,${HOST_HOSTNAME-terrastories.local}
      - VIRTUAL_PATH=/
      - TILESERVER_URL=http://terrastories.local/tileserver/styles/terrastories-map/style.json
      # DATABASE_URL is configured the same as config/database.yaml for backwards compatibility
      # with existing servers that used to run using "development" mode, or offline with a full
      # dev built image.
      - DATABASE_URL=${DATABASE_URL-postgresql://postgres:postgres@db:5432/terrastories-dev}

  tileserver:
    profiles:
      - offline
    restart: unless-stopped
    image: maptiler/tileserver-gl:v4.6.5
    command: --public_url http://terrastories.local/tileserver/
    env_file:
      - .env.offline
    volumes:
      - ./tileserver/data:/data
    environment:
      - VIRTUAL_HOST=terrastories.local
      - VIRTUAL_PATH=/tileserver/
      - VIRTUAL_DEST=/
      - VIRTUAL_PORT=8080

volumes:
  postgres_data:
  bundler:
